Parameters:
    EnvironmentName:
        Description: this name will be prefixed to all the resources.
        Type: String
    VpcCIDR:
        Description: CIDR for idrissolution VPC
        Type: String
        Default: 10.0.0.0/1
    Publicsubnet1CIDR:
        Description: CIDR for public subnet 1
        Type: String
        Default: 10.0.0.0/24
    Publicsubnet2CIDR:
        Description: CIDR for public subnet 2
        Type: String
        Default: 10.0.1.0/24
    Privatesubnet1CIDR:
        Description: CIDR for private subnet 1
        Type: String
        Default: 10.0.2.0/24
    Privatesubnet2CIDR:
        Description: CIDR for private subnet 2
        Type: String
        Default: 10.0.2.0/24
Resources:
    VPC:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VpcCIDR
            EnableDnsHostnames: true
            Tags:
              - Key: Name
                Value: !Ref EnvironmentName
    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
              - Key: Name
                Value: !Ref EnvironmentName
    InternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            VpcId: !Ref VPC
            InternetGatewayId: !Ref InternetGateway
    publicsubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref Publicsubnet1CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} public subnet (AZ1)
    publicsubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs '' ]
            CidrBlock: !Ref Publicsubnet2CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} public subnet (AZ2)
    privatesubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [0, !GetAZs ""]
            CidrBlock: !Ref Privatesubnet1CIDR
            MapPublicIpOnLaunch: false
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} PRIVATE subnet (AZ1)
    privatesubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [1, !GetAZs ""]
            CidrBlock: !Ref Privatesubnet2CIDR
            MapPublicIpOnLaunch: false
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} PRIVATE subnet (AZ2)

    NatGateway1EIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties:
            Domain: vpc

    NatGateway2EIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties:
            Domain: vpc
            
    NatGateway1:
        Type: AWS::EC2::NatGateway
        Properties:
            SubnetId: !Ref publicsubnet1
            AllocationId: !GetAtt NatGateway1EIP.AllocationId
            
    NatGateway2:
        Type: AWS::EC2::NatGateway
        Properties:
            SubnetId: !Ref publicsubnet2
            AllocationId: !GetAtt NatGateway2EIP.AllocationId

    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} public Routes

    DefaultPublicRoute:
        Type: AWS::EC2::Route
        DependsOn: InternetGatewayAttachment
        Properties:
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

    PublicSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref publicsubnet1

    PublicSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref publicsubnet2

    PrivateRouteTable1:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Private Routes (AZ1)

    DefaultPrivateRoute1:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway1

    PrivateSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            SubnetId: !Ref privatesubnet1

    PrivateRouteTable2:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Private Routes (AZ2)

    DefaultPrivateRoute2:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway2

    PrivateSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            SubnetId: !Ref privatesubnet2
Outputs:
    VPC:
        Description: A refrence to the created VPC
        Value: !Ref VPC
        Export:
            Name: !Sub ${EnvironmentName}-VPCID

    VPCPUBLICROUTETABLE:
        Description: public routing to load balancer in public subnets
        Value: !Ref PublicRouteTable
        Export:
            Name: !Sub ${EnvironmentName}-VPCpublicTable

    VPCPRIVATEROUTETABLE1:
        Description: private routing to load balancer in privatesubnet1
        Value: !Ref PrivateRouteTable1
        Export:
            Name: !Sub ${EnvironmentName}-VPCPrivateTable1
    
    VPCPRIVATEROUTETABLE2:
        Description: private routing to load balancer in privatesubnet2
        Value: !Ref PrivateRouteTable2
        Export:
            Name: !Sub ${EnvironmentName}-VPCPrivateTable2

    PUBLICSUBNETS:
        Description: A list of the public subnets in the project
        Value: !Join [",", [!Ref publicsubnet1,!Ref publicsubnet2]]
        Export:
            Name: !Sub ${EnvironmentName}-PUBLIC-SUBNETS

    PUBLICSUBNET1:
        Description: public subnet in AZ1
        Value: !Ref publicsubnet1
        Export:
            Name: !Sub ${EnvironmentName}-public-subnet1

    PUBLICSUBNET2:
        Description: public subnet in AZ2
        Value: !Ref publicsubnet2
        Export:
            Name: !Sub ${EnvironmentName}-public-subnet2

    PRIVATESUBNET1:
        Description: private subnet in AZ1
        Value: !Ref privatesubnet1
        Export:
            Name: !Sub ${EnvironmentName}-PRIVATE-SUBNET1
    
    PRIVATESUBNET2:
        Description: private subnet in AZ2
        Value: !Ref privatesubnet2
        Export:
            Name: !Sub ${EnvironmentName}-PRIVATE-SUBNET2
    

    PRIVATESUBNETS:
        Description: A list of the private subnets in the project
        Value: !Join [",", [!Ref privatesubnet1,!Ref privatesubnet2]]
        Export:
            Name: !Sub ${EnvironmentName}-PRIVATE-SUBNETS